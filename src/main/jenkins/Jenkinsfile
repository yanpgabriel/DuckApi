pipeline {
    agent any

    tools('Configurando Ferramentas') {
        maven 'Maven Jenkins'
    }

    environment {
        GIT_HASH = sh(script: 'git rev-parse --short HEAD', returnStdout: true).trim()
        COMMITER_NAME = sh(script: 'git show -s --pretty=%an', returnStdout: true).trim()
        COMMITER_EMAIL = sh(script: 'git show -s --format=%ae', returnStdout: true).trim()
        COMMITER_COMMENT = sh(script: 'git show -s --pretty=%B', returnStdout: true).trim()

        NAMESPACE = 'duck-namespace'
    }

    stages {
        stage('Checkout') {
            steps {
                // Limpa o Workspace
                cleanWs()
                sh "echo Clonando a branch selecionada '${BRANCH_TO_DEPLOY}'"
                // Baixa o codigo
                git branch: "${BRANCH_TO_DEPLOY}", url: 'https://github.com/yanpgabriel/DuckApi.git'
            }
        }
        stage('Build') {
            steps {
                // Roda o maven
                sh "mvn clean package ${MAVEN_ARGS}"
            }
        }
        stage('Arquivar artefato') {
            steps {
                archiveArtifacts allowEmptyArchive: true, artifacts: 'target/*-SNAPSHOT.jar', followSymlinks: false, onlyIfSuccessful: true
            }
        }
        stage('Gerar Imagem Docker') {
            steps {
                sh "echo ${GIT_HASH}"
                sh "echo ${COMMITER_NAME}"
                sh "echo ${COMMITER_EMAIL}"
                sh "echo ${COMMITER_COMMENT}"
                sh "echo ${NAMESPACE}"
                sh "docker --help"
            }
        }
    }
}
